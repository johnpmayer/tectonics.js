cpp = Rasters()
points = new cpp.vector_vec3()
points.push_back(new cpp.vec3(0))
points.push_back(new cpp.vec3(0.5))
points.push_back(new cpp.vec3(-0.5))
grid = new cpp.CartesianGridCellList3d(points, 1/100)
grid.nearest_id(new cpp.vec3(0.495))
grid.nearest_id(new cpp.vec3(0.))
grid.nearest_id(new cpp.vec3(0.48))

cpp = Rasters()
points = new cpp.vector_vec3()
points.push_back((new cpp.vec3( 1, 0, 0)).normalize())
points.push_back((new cpp.vec3( 0, 1, 0)).normalize())
points.push_back((new cpp.vec3( 0, 0, 1)).normalize())
points.push_back((new cpp.vec3(-1, 0, 0)).normalize())
points.push_back((new cpp.vec3( 0,-1, 0)).normalize())
points.push_back((new cpp.vec3( 0, 0,-1)).normalize())
points.push_back((new cpp.vec3(-1,-1,-1)).normalize())
points.push_back((new cpp.vec3( 1,-1,-1)).normalize())
points.push_back((new cpp.vec3(-1, 1,-1)).normalize())
points.push_back((new cpp.vec3( 1, 1,-1)).normalize())
points.push_back((new cpp.vec3(-1,-1, 1)).normalize())
points.push_back((new cpp.vec3( 1,-1, 1)).normalize())
points.push_back((new cpp.vec3(-1, 1, 1)).normalize())
points.push_back((new cpp.vec3( 1, 1, 1)).normalize())
points.push_back((new cpp.vec3( 1, 1, 1)).normalize())
grid = new cpp.SphereGridVoronoi3d(points, 1/100)
grid.nearest_id(new cpp.vec3(1))
grid.nearest_id(new cpp.vec3(-1))
grid.nearest_id(new cpp.vec3( 1, 0, 0))
grid.nearest_id(new cpp.vec3( 0, 1, 0))
grid.nearest_id(new cpp.vec3( 0, 0, 1))
grid.nearest_id(new cpp.vec3(-1, 0, 0))
grid.nearest_id(new cpp.vec3( 0,-1, 0))
grid.nearest_id(new cpp.vec3( 0, 0,-1))
grid.nearest_id(new cpp.vec3(-1,-1,-1))
grid.nearest_id(new cpp.vec3( 1,-1,-1))
grid.nearest_id(new cpp.vec3(-1, 1,-1))
grid.nearest_id(new cpp.vec3( 1, 1,-1))
grid.nearest_id(new cpp.vec3(-1,-1, 1))
grid.nearest_id(new cpp.vec3( 1,-1, 1))
grid.nearest_id(new cpp.vec3(-1, 1, 1))
grid.nearest_id(new cpp.vec3( 1, 1, 1))
grid.nearest_id(new cpp.vec3( 1, 1, 1))

